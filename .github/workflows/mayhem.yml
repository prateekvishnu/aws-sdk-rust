name: Mayhem
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  corrected_prelude_crc_MAYHEMFILE: Mayhem/corrected_prelude_crc.mayhemfile
  json_deserialize_MAYHEMFILE: Mayhem/json_deserialize.mayhemfile
  json_deserialize_corpus_cov_crc_MAYHEMFILE: Mayhem/json_deserialize_corpus_cov.mayhemfile
  mutated_headers_MAYHEMFILE: Mayhem/mutated_headers.mayhemfile
  parse_date_time_MAYHEMFILE: Mayhem/parse_date_time.mayhemfile
  parse_epoch_seconds_MAYHEMFILE: Mayhem/parse_epoch_seconds.mayhemfile
  parse_http_date_MAYHEMFILE: Mayhem/parse_http_date.mayhemfile
  prelude_MAYHEMFILE: Mayhem/prelude.mayhemfile
  raw_bytes_MAYHEMFILE: Mayhem/raw_bytes.mayhemfile
  read_date_time_MAYHEMFILE: Mayhem/read_date_time.mayhemfile
  read_http_date_MAYHEMFILE: Mayhem/read_http_date.mayhemfile
  read_many_from_str_MAYHEMFILE: Mayhem/read_many_from_str.mayhemfile
  round_trip_MAYHEMFILE: Mayhem/round_trip.mayhemfile

jobs:
  build:
    name: '${{ matrix.os }} shared=${{ matrix.shared }} ${{ matrix.build_type }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        shared: [false]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            triplet: x64-linux

    steps:
      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Start analysis for corrected_prelude_crc
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.corrected_prelude_crc_MAYHEMFILE}} --duration 300
          sarif-output: sarif

      - name: Start analysis for json_deserialize
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.json_deserialize_MAYHEMFILE}} --duration 300
          sarif-output: sarif        

      - name: Start analysis for json_deserialize_corpus_cov
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.json_deserialize_corpus_cov_crc_MAYHEMFILE}} --duration 300
          sarif-output: sarif

      - name: Start analysis for mutated_headers
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.mutated_headers_MAYHEMFILE
            }} --duration 300
          sarif-output: sarif  

      - name: Start analysis for parse_date_time
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.parse_date_time_MAYHEMFILE}} --duration 300
          sarif-output: sarif

      - name: Start analysis for parse_epoch_seconds
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.parse_epoch_seconds_MAYHEMFILE}} --duration 300
          sarif-output: sarif  

      - name: Start analysis for parse_http_date
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.parse_http_date_MAYHEMFILE}} --duration 300
          sarif-output: sarif

      - name: Start analysis for prelude
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.prelude_MAYHEMFILE}} --duration 300
          sarif-output: sarif  

      - name: Start analysis for read_date_time
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.read_date_time_MAYHEMFILE}} --duration 300
          sarif-output: sarif

      - name: Start analysis for raw_bytes
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.raw_bytes_MAYHEMFILE}} --duration 300
          sarif-output: sarif  

      - name: Start analysis for read_http_date
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.read_http_date_MAYHEMFILE}} --duration 300
          sarif-output: sarif

      - name: Start analysis for read_many_from_str
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.read_many_from_str_MAYHEMFILE}} --duration 300
          sarif-output: sarif  

      - name: Start analysis for round_trip
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.round_trip_MAYHEMFILE}} --duration 300
          sarif-output: sarif  

      - name: Upload SARIF file(s)
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: sarif
